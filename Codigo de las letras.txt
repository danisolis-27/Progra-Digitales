
module font(
input [2:0] character_select,
input [5:0] rom_addr,// por esto es que dice 5`h0
input [2:0] rom_col,
output rom_bit
    );
//Número de fila seleccionado por rom_addr
reg [31:0] rom_data;

//Números asignados a cada caractér
localparam d_addr = 3'd1; // letras de Daniela
localparam g_addr = 3'd2; // letras de Gabriel
localparam s_addr = 3'd3; //Letras de Sthepanie

localparam cero_addr = 3'd0;

//rom_bit 1 o 0 según el bit seleccionado del font
assign rom_bit = rom_data [rom_col];
always@*
begin

//Letra D
if(character_select==cero_addr)
	begin
		case (rom_addr)
  
5'h0: rom_data = 32'b01111111111111111111111111000000;
5'h1: rom_data = 32'b01111111111111111111111111000000;
5'h2: rom_data = 32'b01111111111111111111111111000000;
5'h3: rom_data = 32'b01111111111111111111111111000000;
5'h4: rom_data = 32'b01111100000000000111111111111000;
5'h5: rom_data = 32'b01111100000000000111111111111000;
5'h6: rom_data = 32'b01111100000000000111111111111000;
5'h7: rom_data = 32'b01111100000000000111111111111000;
5'h8: rom_data = 32'b01111100000000000111111111111000;
5'h9: rom_data = 32'b01111100000000000111111111111000; 
5'hA: rom_data = 32'b01111100000000000111111111111000;
5'hB: rom_data = 32'b01111100000000000111111111111000;
5'hC: rom_data = 32'b01111100000000000111111111111000;
5'hD: rom_data = 32'b01111100000000000111111111111000;
5'hE: rom_data = 32'b01111100000000000111111111111000;
5'h10: rom_data =32'b01111100000000000111111111111000;
5'h11: rom_data =32'b01111100000000000111111111111000;
5'h12: rom_data =32'b01111100000000000111111111111000;
5'h13: rom_data =32'b01111100000000000111111111111000;
5'h14: rom_data =32'b01111100000000000111111111111000;
5'h15: rom_data =32'b01111100000000000111111111111000;
5'h16: rom_data =32'b01111100000000000111111111111000;
5'h17: rom_data =32'b01111100000000000111111111111000;
5'h18: rom_data =32'b01111100000000000111111111111000;
5'h19: rom_data =32'b01111100000000000111111111111000;
5'h1a: rom_data =32'b01111100000000000111111111111000;
5'h1b: rom_data =32'b01111100000000000111111111111000;
5'h1c: rom_data =32'b01111111111111111111111111000000;
5'h1d: rom_data =32'b01111111111111111111111111000000;
5'h1e: rom_data =32'b01111111111111111111111111000000;
5'h1f: rom_data =32'b00000000000000000000000000000000;

	
endcase
end

else

//Letra G
if(character_select==g_addr)
	begin
		case (rom_addr)
  
5'h0: rom_data = 32'b00011111111111111111111111110000;
5'h1: rom_data = 32'b00011111111111111111111111110000;
5'h2: rom_data = 32'b00011111111111111111111111110000;
5'h3: rom_data = 32'b01111111111111111111111111110000;
5'h4: rom_data = 32'b01111100000000000000000000000000;
5'h5: rom_data = 32'b01111100000000000000000000000000;
5'h6: rom_data = 32'b01111100000000000000000000000000;
5'h7: rom_data = 32'b01111100000000000000000000000000;
5'h8: rom_data = 32'b01111100000000000000000000000000;
5'h9: rom_data = 32'b01111100000000000000000000000000; 
5'hA: rom_data = 32'b01111100000000000000000000000000;
5'hB: rom_data = 32'b01111100011111111111111111111000;
5'hC: rom_data = 32'b01111100011111111111111111111000;
5'hD: rom_data = 32'b01111100011111111111111111111000;
5'hE: rom_data = 32'b01111100011111111111111111111000;
5'h10: rom_data =32'b01111100011111111111111111111000;
5'h11: rom_data =32'b01111100000000000111111111111000;
5'h12: rom_data =32'b01111100000000000111111111111000;
5'h13: rom_data =32'b01111100000000000111111111111000;
5'h14: rom_data =32'b01111100000000000111111111111000;
5'h15: rom_data =32'b01111100000000000111111111111000;
5'h16: rom_data =32'b01111100000000000111111111111000;
5'h17: rom_data =32'b01111100000000000111111111111000;
5'h18: rom_data =32'b01111100000000000111111111111000;
5'h19: rom_data =32'b01111100000000000111111111111000;
5'h1a: rom_data =32'b01111100000000000111111111111000;
5'h1b: rom_data =32'b01111100000000000111111111111000;
5'h1c: rom_data =32'b01111111111111111111111111111000;
5'h1d: rom_data =32'b00011111111111111111111111111000;
5'h1e: rom_data =32'b00011111111111111111111111111000;
5'h1f: rom_data =32'b00000000000000000000000000000000;
	
endcase
end
else

//Letra S
if(character_select==s_addr)
begin
case (rom_addr)
  
5'h0: rom_data = 32'b00001111111111111111111111111111;
5'h1: rom_data = 32'b00001111111111111111111111111111;
5'h2: rom_data = 32'b01111111111111111111111111111111;
5'h3: rom_data = 32'b01111111111111111111111111111111;
5'h4: rom_data = 32'b01111111111111111111111111111111;
5'h5: rom_data = 32'b01111100000000000000000000000000;
5'h6: rom_data = 32'b01111100000000000000000000000000;
5'h7: rom_data = 32'b01111100000000000000000000000000;
5'h8: rom_data = 32'b01111100000000000000000000000000;
5'h9: rom_data = 32'b01111100000000000000000000000000; 
5'hA: rom_data = 32'b01111100000000000000000000000000;
5'hB: rom_data = 32'b01111100000000000000000000000000;
5'hC: rom_data = 32'b01111111111111111111111111111000;
5'hD: rom_data = 32'b01111111111111111111111111111000;
5'hE: rom_data = 32'b01111111111111111111111111111111;
5'h10: rom_data =32'b01111111111111111111111111111111;
5'h11: rom_data =32'b01111111111111111111111111111111;
5'h12: rom_data =32'b00001111111111111111111111111111;
5'h13: rom_data =32'b00001111111111111111111111111111;
5'h14: rom_data =32'b00000000000000000000000001111111;
5'h15: rom_data =32'b00000000000000000000000001111111;
5'h16: rom_data =32'b00000000000000000000000001111111;
5'h17: rom_data =32'b00000000000000000000000001111111;
5'h18: rom_data =32'b00000000000000000000000001111111;
5'h19: rom_data =32'b00000000000000000000000001111111;
5'h1a: rom_data =32'b01111111111111111111111111111111;
5'h1b: rom_data =32'b01111111111111111111111111111111;
5'h1c: rom_data =32'b01111111111111111111111111111111;
5'h1d: rom_data =32'b01111111111111111111111111111000;
5'h1e: rom_data =32'b00011111111111111111111111111000;
5'h1f: rom_data =32'b00000000000000000000000000000000;

endcase
end
else

rom_data = 8'b00000000;
end

endmodule